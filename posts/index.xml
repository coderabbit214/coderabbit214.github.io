<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - 第二大脑</title>
        <link>http://example.org/posts/</link>
        <description>All Posts | 第二大脑</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>1157237955@qq.com (coderabbit)</managingEditor>
            <webMaster>1157237955@qq.com (coderabbit)</webMaster><lastBuildDate>Thu, 21 Mar 2024 00:00:00 &#43;0800</lastBuildDate><atom:link href="http://example.org/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Golang GC调优</title>
    <link>http://example.org/golang-gc%E8%B0%83%E4%BC%98/</link>
    <pubDate>Thu, 21 Mar 2024 00:00:00 &#43;0800</pubDate>
    <author>coderabbit</author>
    <guid>http://example.org/golang-gc%E8%B0%83%E4%BC%98/</guid>
    <description><![CDATA[Golang GC调优 问题 在一个服务中需要开多协程大量请求外部接口获取数据，使用docker进行部署，会出现exited with code 137OOM问题，检查代码后]]></description>
</item>
<item>
    <title>本地制作Ollama可使用的大模型(PyTorch &amp; Safetensors)</title>
    <link>http://example.org/%E6%9C%AC%E5%9C%B0%E5%88%B6%E4%BD%9Collama%E5%8F%AF%E4%BD%BF%E7%94%A8%E7%9A%84%E5%A4%A7%E6%A8%A1%E5%9E%8B/</link>
    <pubDate>Thu, 21 Mar 2024 00:00:00 &#43;0800</pubDate>
    <author>coderabbit</author>
    <guid>http://example.org/%E6%9C%AC%E5%9C%B0%E5%88%B6%E4%BD%9Collama%E5%8F%AF%E4%BD%BF%E7%94%A8%E7%9A%84%E5%A4%A7%E6%A8%A1%E5%9E%8B/</guid>
    <description><![CDATA[本地制作Ollama可使用的大模型(PyTorch &amp; Safetensors) 下载代码 1 2 3 4 5 6 7 8 9 10 11 12 13 git clone https://github.com/ollama/ollama.git cd ollama # 下载llama.cpp 子模块 git submodule init git submodule update]]></description>
</item>
<item>
    <title>Golang 分布式事务</title>
    <link>http://example.org/golang-%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/</link>
    <pubDate>Sun, 14 Jan 2024 00:00:00 &#43;0800</pubDate>
    <author>coderabbit</author>
    <guid>http://example.org/golang-%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/</guid>
    <description><![CDATA[Golang 分布式事务 使用两阶段提交（2PC）协议实现分布式事务 1. 数据库设置 创建两个数据库 1 2 3 4 5 6 7 8 9 10 CREATE DATABASE test1; CREATE DATABASE test2; create table user ( id bigint auto_increment primary key, username varchar(255) not null, password]]></description>
</item>
<item>
    <title>Next.js 学习笔记</title>
    <link>http://example.org/next.js-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
    <pubDate>Wed, 05 Apr 2023 20:33:36 &#43;0800</pubDate>
    <author>coderabbit</author>
    <guid>http://example.org/next.js-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
    <description><![CDATA[Next.js 学习笔记 数据抓取 getServerSideProps 什么时候使用： ​ 仅当需要呈现其数据必须在请求时获取的页面时，才应使用 getServerSideProps 。这可能是由于请求的数据或属性的性质（例如 authorization 标头或]]></description>
</item>
<item>
    <title>llama模型本地Running</title>
    <link>http://example.org/llama%E6%A8%A1%E5%9E%8B%E6%9C%AC%E5%9C%B0running/</link>
    <pubDate>Wed, 15 Mar 2023 11:13:36 &#43;0800</pubDate>
    <author>coderabbit</author>
    <guid>http://example.org/llama%E6%A8%A1%E5%9E%8B%E6%9C%AC%E5%9C%B0running/</guid>
    <description><![CDATA[llama模型本地Running 代码准备 下载代码 1 git@github.com:coderabbit214/llama.cpp.git 编译代码 1 2 cd llama.cpp make Python环境准备 本机环境Python 3.10 可以使用 1 pipenv shell --python 3.10 创建一个环]]></description>
</item>
<item>
    <title>Neo4j实践</title>
    <link>http://example.org/neo4j-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
    <pubDate>Sat, 11 Mar 2023 12:59:36 &#43;0800</pubDate>
    <author>coderabbit</author>
    <guid>http://example.org/neo4j-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
    <description><![CDATA[Neo4j实践 关于 是什么 图形数据库管理系统，是一个高性能、面向对象的数据库系统，用于存储、管理和查询大规模的图形数据。它是一个开源的、ACI]]></description>
</item>
<item>
    <title>Go WebAssembly 实践</title>
    <link>http://example.org/go-webassembly-%E5%AE%9E%E8%B7%B5/</link>
    <pubDate>Mon, 06 Feb 2023 00:00:00 &#43;0800</pubDate>
    <author>coderabbit</author>
    <guid>http://example.org/go-webassembly-%E5%AE%9E%E8%B7%B5/</guid>
    <description><![CDATA[Go-WebAssembly实践 在网页端实现一个json转struct Hello Word 创建项目目录 1 2 3 4 5 6 Documents/ └── webassembly ├── assets └── cmd ├── server └── wasm]]></description>
</item>
<item>
    <title>gin基础</title>
    <link>http://example.org/gin/</link>
    <pubDate>Sun, 13 Nov 2022 22:00:36 &#43;0800</pubDate>
    <author>coderabbit</author>
    <guid>http://example.org/gin/</guid>
    <description><![CDATA[gin基础 HelloWord 1 2 3 4 5 6 7 8 9 10 11 12 func main() { // 1.创建路由 默认使用了2个中间件Logger(), Recovery() r := gin.Default() // 2.绑定路由规则，执行的函数 // gin]]></description>
</item>
<item>
    <title>gRPC</title>
    <link>http://example.org/grpc/</link>
    <pubDate>Sun, 13 Nov 2022 18:00:36 &#43;0800</pubDate>
    <author>coderabbit</author>
    <guid>http://example.org/grpc/</guid>
    <description><![CDATA[gRPC 环境准备 1 2 3 4 brew install grpc brew install protobuf brew install protoc-gen-go brew install protoc-gen-go-grpc HelloWord 创建文件./pb/hello_grpc.proto 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 syntax = &#34;proto3&#34;; package hello_grpc; option]]></description>
</item>
<item>
    <title>Go使用cobra构建命令行工具</title>
    <link>http://example.org/go%E4%BD%BF%E7%94%A8cobra%E6%9E%84%E5%BB%BA%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</link>
    <pubDate>Thu, 29 Sep 2022 22:25:36 &#43;0800</pubDate>
    <author>coderabbit</author>
    <guid>http://example.org/go%E4%BD%BF%E7%94%A8cobra%E6%9E%84%E5%BB%BA%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</guid>
    <description><![CDATA[Go使用cobra构建命令行工具 安装CLI 1 go install github.com/spf13/cobra-cli@latest 创建项目并引入依赖 1 2 3 4 5 6 7 # 创建go项目 mkdir my_command cd my_command go mod init my_command # 使用cobra-cli初始]]></description>
</item>
</channel>
</rss>
