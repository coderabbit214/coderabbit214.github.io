<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - 第二大脑</title>
        <link>http://example.org/posts/</link>
        <description>All Posts | 第二大脑</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>1157237955@qq.com (coderabbit)</managingEditor>
            <webMaster>1157237955@qq.com (coderabbit)</webMaster><lastBuildDate>Sat, 11 Mar 2023 12:59:36 &#43;0800</lastBuildDate><atom:link href="http://example.org/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Neo4j实践</title>
    <link>http://example.org/neo4j-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</link>
    <pubDate>Sat, 11 Mar 2023 12:59:36 &#43;0800</pubDate>
    <author>coderabbit</author>
    <guid>http://example.org/neo4j-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</guid>
    <description><![CDATA[Neo4j实践 关于 是什么 图形数据库管理系统，是一个高性能、面向对象的数据库系统，用于存储、管理和查询大规模的图形数据。它是一个开源的、ACI]]></description>
</item>
<item>
    <title>Go WebAssembly 实践</title>
    <link>http://example.org/go-webassembly-%E5%AE%9E%E8%B7%B5/</link>
    <pubDate>Mon, 06 Feb 2023 00:00:00 &#43;0800</pubDate>
    <author>coderabbit</author>
    <guid>http://example.org/go-webassembly-%E5%AE%9E%E8%B7%B5/</guid>
    <description><![CDATA[Go-WebAssembly实践 在网页端实现一个json转struct Hello Word 创建项目目录 1 2 3 4 5 6 Documents/ └── webassembly ├── assets └── cmd ├── server └── wasm]]></description>
</item>
<item>
    <title>gin基础</title>
    <link>http://example.org/gin/</link>
    <pubDate>Sun, 13 Nov 2022 22:00:36 &#43;0800</pubDate>
    <author>coderabbit</author>
    <guid>http://example.org/gin/</guid>
    <description><![CDATA[gin基础 HelloWord 1 2 3 4 5 6 7 8 9 10 11 12 func main() { // 1.创建路由 默认使用了2个中间件Logger(), Recovery() r := gin.Default() // 2.绑定路由规则，执行的函数 // gin]]></description>
</item>
<item>
    <title>gRPC</title>
    <link>http://example.org/grpc/</link>
    <pubDate>Sun, 13 Nov 2022 18:00:36 &#43;0800</pubDate>
    <author>coderabbit</author>
    <guid>http://example.org/grpc/</guid>
    <description><![CDATA[gRPC 环境准备 1 2 3 4 brew install grpc brew install protobuf brew install protoc-gen-go brew install protoc-gen-go-grpc HelloWord 创建文件./pb/hello_grpc.proto 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 syntax = &#34;proto3&#34;; package hello_grpc; option]]></description>
</item>
<item>
    <title>Go使用cobra构建命令行工具</title>
    <link>http://example.org/go%E4%BD%BF%E7%94%A8cobra%E6%9E%84%E5%BB%BA%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</link>
    <pubDate>Thu, 29 Sep 2022 22:25:36 &#43;0800</pubDate>
    <author>coderabbit</author>
    <guid>http://example.org/go%E4%BD%BF%E7%94%A8cobra%E6%9E%84%E5%BB%BA%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7/</guid>
    <description><![CDATA[Go使用cobra构建命令行工具 安装CLI 1 go install github.com/spf13/cobra-cli@latest 创建项目并引入依赖 1 2 3 4 5 6 7 # 创建go项目 mkdir my_command cd my_command go mod init my_command # 使用cobra-cli初始]]></description>
</item>
<item>
    <title>Kubernetes</title>
    <link>http://example.org/kubernetes/</link>
    <pubDate>Wed, 13 Jul 2022 11:13:36 &#43;0800</pubDate>
    <author>coderabbit</author>
    <guid>http://example.org/kubernetes/</guid>
    <description><![CDATA[Kubernetes 命令 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67]]></description>
</item>
<item>
    <title>FRP 内网穿透</title>
    <link>http://example.org/frp-%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</link>
    <pubDate>Sun, 29 May 2022 13:57:36 &#43;0800</pubDate>
    <author>coderabbit</author>
    <guid>http://example.org/frp-%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</guid>
    <description><![CDATA[FRP 内网穿透 准备 一台拥有公网ip的服务器 服务器端安装配置FRPS 下载文件 github地址 1 wget https://github.com/fatedier/frp/releases/download/v0.43.0/frp_0.43.0_linux_amd64.tar.gz 解压 1 tar -zxvf frp_0.43.0_linux_amd64.tar.gz 配置 frps.ini 1 2 3 4 5 [common] # 端口 bind_port = 7000 # 密码]]></description>
</item>
<item>
    <title>spring-cloud-stream 3.x 开发</title>
    <link>http://example.org/spring-cloud-stream-3.x-%E5%BC%80%E5%8F%91/</link>
    <pubDate>Mon, 16 May 2022 19:24:36 &#43;0800</pubDate>
    <author>coderabbit</author>
    <guid>http://example.org/spring-cloud-stream-3.x-%E5%BC%80%E5%8F%91/</guid>
    <description><![CDATA[spring-cloud-stream 3.x 开发 基本使用 基本配置 依赖 1 implementation &#39;org.springframework.cloud:spring-cloud-stream:3.2.3&#39; 配置 1 2 3 4 5 6 spring: rabbitmq: host: 127.0.0.1 port: 5672 username: username password: password 生产者 配置 注意：analysePdf-out-0，analysePdf]]></description>
</item>
<item>
    <title>springboot自定义异步线程池</title>
    <link>http://example.org/springboot%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BC%82%E6%AD%A5%E7%BA%BF%E7%A8%8B%E6%B1%A0/</link>
    <pubDate>Fri, 08 Apr 2022 11:43:36 &#43;0800</pubDate>
    <author>coderabbit</author>
    <guid>http://example.org/springboot%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BC%82%E6%AD%A5%E7%BA%BF%E7%A8%8B%E6%B1%A0/</guid>
    <description><![CDATA[springboot自定义异步线程池 自定义线程池 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 @Configuration @EnableAsync public class SyncConfiguration{ @Bean(name = &#34;asyncPoolTaskExecutor&#34;) public ThreadPoolTaskExecutor executor() { ThreadPoolTaskExecutor taskExecutor = new ThreadPoolTaskExecutor();]]></description>
</item>
<item>
    <title>使用Enum和异常控制器</title>
    <link>http://example.org/%E4%BD%BF%E7%94%A8enum%E5%92%8C%E5%BC%82%E5%B8%B8%E6%8E%A7%E5%88%B6%E5%99%A8/</link>
    <pubDate>Fri, 18 Mar 2022 16:21:36 &#43;0800</pubDate>
    <author>coderabbit</author>
    <guid>http://example.org/%E4%BD%BF%E7%94%A8enum%E5%92%8C%E5%BC%82%E5%B8%B8%E6%8E%A7%E5%88%B6%E5%99%A8/</guid>
    <description><![CDATA[使用Enum和异常控制器 目的：避免定义各种异常类 基础：已经做了统一返回处理 Enum 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32]]></description>
</item>
</channel>
</rss>
